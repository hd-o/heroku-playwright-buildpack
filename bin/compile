#!/usr/bin/env bash

set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BP_DIR=`cd $(dirname $0); cd ..; pwd`

error() {
    echo " !     $*" >&2
    exit 1
}

topic() {
    echo "-----> $*"
}

install_system_deps() {
    topic "Installing System Dependencies"

    APT_BUILDPACK="https://github.com/heroku/heroku-buildpack-apt"
    local buildpack_tmpdir=$(mktemp -d)
    cd $buildpack_tmpdir && git clone $APT_BUILDPACK .

    local build_tmpdir=$(mktemp -d)
    mkdir -p $build_tmpdir

    SUPPORTED_BROWSERS=${PLAYWRIGHT_BUILDPACK_BROWSERS:-chromium,firefox,webkit}
    echo "Installing Playwright dependencies (env: PLAYWRIGHT_BUILDPACK_BROWSERS) for $SUPPORTED_BROWSERS."

    if [[ "$SUPPORTED_BROWSERS" == *"chromium"* ]]; then
        cat << EOF >>$build_tmpdir/Aptfile
# Chromium dependencies
libnspr4
libnss3
libxss1
libasound2t64
fonts-noto-color-emoji
libgbm1
libatk-bridge2.0-0t64
libxkbcommon0
libxrandr2
libatspi2.0-0t64
libxshmfence-dev
EOF
    fi

    if [[ "$SUPPORTED_BROWSERS" == *"firefox"* ]]; then
        cat << EOF >>$build_tmpdir/Aptfile
# Firefox dependencies
libdbus-1-3
libxt6
libsm6
libice6
libx11-xcb1
libxcursor1
libxi6
EOF
    fi

    if [[ "$SUPPORTED_BROWSERS" == *"firefox"* || "$SUPPORTED_BROWSERS" == *"chromium"* ]]; then
        cat << EOF >>$build_tmpdir/Aptfile
# Needed by Firefox and Chromium
libgdk-pixbuf-2.0-0
libcairo-gobject2
libpulse0
libusb-1.0-0
libatk1.0-0t64
libxcomposite1
libxdamage1
libxfixes3
libgtk-3-0t64
EOF
    fi

    # Common dependencies for all browsers (from npx playwright install-deps)
    cat << EOF >>$build_tmpdir/Aptfile
# Common Playwright dependencies
libcairo2
libcups2t64
libdrm2
libglib2.0-0t64
libpango-1.0-0
libx11-6
libxcb1
libxext6
libpangocairo-1.0-0
libxrender1
gstreamer1.0-libav
gstreamer1.0-plugins-bad
gstreamer1.0-plugins-base
gstreamer1.0-plugins-good
libicu74
libatomic1
libenchant-2-2
libepoxy0
libevent-2.1-7t64
libflite1
libgles2
libgstreamer-gl1.0-0
libgstreamer-plugins-bad1.0-0
libgstreamer-plugins-base1.0-0
libgstreamer1.0-0
libgtk-4-1
libharfbuzz-icu0
libharfbuzz0b
libhyphen0
libjpeg-turbo8
liblcms2-2
libmanette-0.2-0
libopus0
libpng16-16t64
libsecret-1-0
libwayland-client0
libwayland-egl1
libwayland-server0
libwebp7
libwebpdemux2
libwoff1
libxml2
libxslt1.1
libx264-164
libavif16
xvfb
fonts-unifont
xfonts-cyrillic
xfonts-scalable
fonts-liberation
fonts-ipafont-gothic
fonts-wqy-zenhei
fonts-tlwg-loma-otf
fonts-freefont-ttf
EOF

    case "$STACK" in
        "heroku-18")
            cat << EOF >>$build_tmpdir/Aptfile
libvpx5
EOF
            ;;
        "heroku-20")
            cat << EOF >>$build_tmpdir/Aptfile
libvpx6
EOF
            ;;
        "heroku-22")
            cat << EOF >>$build_tmpdir/Aptfile
libvpx7
EOF
            ;;
        "heroku-24")
            cat << EOF >>$build_tmpdir/Aptfile
libvpx9
EOF
            ;;
        *)
            error "STACK must be 'heroku-18', 'heroku-20', 'heroku-22', or 'heroku-24'"
    esac

    local cache_tmpdir=$(mktemp -d)

    HOME=/app $buildpack_tmpdir/bin/compile $build_tmpdir $cache_tmpdir
    if [ $? -ne 0 ]; then
        rm -rf $buildpack_tmpdir $build_tmpdir $cache_tmpdir
        error "Could not install dependencies"
    fi
    mv $build_tmpdir/.apt $BUILD_DIR
    # mv file in case user is using .profile.d
    mkdir -p $BUILD_DIR/.profile.d/
    mv $build_tmpdir/.profile.d/000_apt.sh $BUILD_DIR/.profile.d/

    rm -rf $buildpack_tmpdir $build_tmpdir $cache_tmpdir
}

configure_export_env() {
    topic "Writing profile script"
    mkdir -p $BUILD_DIR/.profile.d
    cat << EOF >$BUILD_DIR/.profile.d/001_playwright.sh
export PLAYWRIGHT_BROWSERS_PATH=0
# They are not referenced correctly for ffmpeg
export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/app/.apt/usr/lib/x86_64-linux-gnu/pulseaudio/:/app/.apt/lib/x86_64-linux-gnu/
EOF

    # Give environment variable to other buildpacks
    echo "export PLAYWRIGHT_BROWSERS_PATH=0" >> "$BP_DIR/export"
    export PLAYWRIGHT_BROWSERS_PATH=0
}

export_env_dir() {
    env_dir=$1
    acceptlist_regex=${2:-''}
    denylist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
    if [ -d "$env_dir" ]; then
        for e in $(ls $env_dir); do
            echo "$e" | grep -E "$acceptlist_regex" | grep -qvE "$denylist_regex" &&
            export "$e=$(cat $env_dir/$e)"
            :
        done
    fi
}

export_env_dir "$ENV_DIR" PLAYWRIGHT_BUILDPACK_BROWSERS
install_system_deps
configure_export_env
